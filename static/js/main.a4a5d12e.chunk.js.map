{"version":3,"sources":["Hooks/http.hook.js","Repos.js","User.js","MainPage.js","UserPage.js","MainApp.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","msg","message","clearError","RepoLink","props","className","href","html_url","name","makeRepoList","repos","result","length","i","push","id","User","user","setRepos","useEffect","repos_url","console","log","src","avatar_url","alt","type","to","login","map","item","gridIco","icon","faThLarge","listIco","faList","MainPage","popularUsers","setPopularUsers","viewType","setViewType","searchValue","setSearchValue","history","useHistory","items","getSearchHistoryItem","index","localStorage","replace","value","placeholder","onChange","event","target","onKeyPress","key","setItem","onFocus","document","querySelector","style","display","onBlur","historyArr","searchHistory","onClick","backIco","faArrowLeft","OrganizationsList","orgz","Organizations","orgzs","setOrgzs","organizations_url","UserPageInfo","repoList","UserPage","setUser","username","useParams","loadData","hasOwnProperty","MainApp","path","exact","component","children","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a4a5d12e.chunk.js","sourcesContent":["import {useState, useCallback} from  'react'\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback( async (url, method = 'GET', body = null, headers = {}) => {\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body);\r\n                headers['Content-Type'] = 'application/json';\r\n            };\r\n\r\n            setLoading(true);\r\n            const response = await fetch(url, {method, body, headers});\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.msg || 'Something went wrong')\r\n            }\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch (err) {\r\n            setLoading(false);\r\n            setError(err.message);\r\n            throw err;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return {\r\n        loading,\r\n        request,\r\n        error,\r\n        clearError\r\n    }\r\n};","const RepoLink = (props) => {\r\n    return (\r\n        <a \r\n          className=\"repos-linksWrap-link\"\r\n          href={props.html_url}>{props.name}\r\n        </a>\r\n    )\r\n}\r\n\r\nexport const makeRepoList = (repos) => {\r\n    let result = [];\r\n    let length = repos.length > 3 ? 3 : repos.length;\r\n\r\n    for (let i = 0; i < length; i++) {\r\n      result.push(\r\n        <RepoLink \r\n          key={repos[i].id} \r\n          html_url={repos[i].html_url} \r\n          name={repos[i].name}/>\r\n      )\r\n    }\r\n    \r\n    return result;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {useHttp} from './Hooks/http.hook';\r\nimport {makeRepoList} from './Repos';\r\n\r\n\r\nconst User = ({user}) => {\r\n  const [repos, setRepos] = useState([]);\r\n  const {loading, error, request, clearError} = useHttp();\r\n\r\n  useEffect(async () => {\r\n    try {\r\n        const data = await request(`${user.repos_url}?per_page=3`)\r\n        setRepos(data);\r\n    } catch(err) {\r\n        console.log(err)\r\n    }\r\n  }, [])\r\n\r\n  makeRepoList(repos);\r\n  \r\n  return (\r\n    <li \r\n      className=\"users-wrapper__item\"\r\n    >\r\n      <div className=\"users-wrapper__item-info\">\r\n        <img \r\n              className=\"users-wrapper__item-info-img\" \r\n              src={user.avatar_url} \r\n              alt=\"user_img\"\r\n        />\r\n        <span className=\"users-wrapper__item-info-type\">\r\n          Type: {user.type} â€” \r\n        </span>\r\n\r\n        <Link to={`/${user.login}`}>&nbsp;{user.login}</Link>\r\n      </div>\r\n\r\n      <div className=\"repos\">\r\n        <div className=\"text\">Repositories:</div>\r\n        <div className=\"repos-linksWrap\">\r\n          {\r\n              loading ? null :\r\n              repos.length === 0 ? null :\r\n              makeRepoList(repos).map(item => item)\r\n          }\r\n        </div>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default User;","import React, { useEffect, useState } from 'react';\r\nimport {useHttp} from './Hooks/http.hook';\r\nimport {Link} from 'react-router-dom';\r\nimport User from './User';\r\n\r\n// Font Awesome\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faThLarge, faList } from '@fortawesome/free-solid-svg-icons';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst gridIco = <FontAwesomeIcon icon={faThLarge} />\r\nconst listIco = <FontAwesomeIcon icon={faList} />\r\n\r\nconst API_URL = 'https://api.github.com/search/users?q=followers:>=1000&per_page=52';\r\n\r\nconst MainPage = () => {\r\n    const [popularUsers, setPopularUsers] = useState([]);\r\n    const [viewType, setViewType] = useState(\"list\");\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    useEffect(async () => {\r\n      try {\r\n          const data = await request(API_URL)\r\n          setPopularUsers(data.items);\r\n      } catch(err) {\r\n          console.log(err)\r\n      }\r\n    }, [])\r\n\r\n    const handleClickViewType = () => {\r\n      if (viewType === \"list\") {\r\n        setViewType(\"grid\");\r\n      }\r\n      \r\n      if (viewType === \"grid\") {\r\n        setViewType(\"list\");\r\n      }\r\n    }\r\n  \r\n    const handleChangeInput = event => {\r\n      setSearchValue(event.target.value)\r\n    }\r\n\r\n    const keyPress = event => {\r\n      if (event.key === 'Enter') {\r\n        history.push(`/${searchValue}`)\r\n\r\n        if (localStorage.length < 3) {\r\n          localStorage.setItem(`user${localStorage.length}`, JSON.stringify(searchValue));\r\n          console.log(localStorage)\r\n        }\r\n      }\r\n    }\r\n\r\n    const searchHistory = () => {\r\n      let historyArr = [];\r\n      for (let i = 0; i < localStorage.length; i++) {\r\n        historyArr.push(getSearchHistoryItem(i))\r\n      }\r\n\r\n      return historyArr;\r\n    }\r\n\r\n    const inputFocus = () => {\r\n      if (localStorage.length > 0) {\r\n        const element = document.querySelector('#searchHistory');\r\n        element.style.display = 'flex';\r\n      }\r\n    }\r\n    const inputUnFocus = () => {\r\n      const element = document.querySelector('#searchHistory');\r\n      element.style.display = 'none';\r\n    }\r\n\r\n    const getSearchHistoryItem = (index) => {\r\n      const user = localStorage[`user${index}`].replace(/\"/g, \"\");\r\n      return (\r\n        <div \r\n          key={localStorage[`user${index}`]} \r\n          className=\"header-search__history-item\"\r\n        >\r\n          <Link to={`/${user}`}>\r\n            {user}\r\n          </Link>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"mainPage mainPage-outer\">\r\n        <div className=\"header header-outer\">\r\n          <div className=\"header-inner container\">\r\n            <div className=\"header-title\">\r\n              Most popular users in GitHub!\r\n            </div>\r\n  \r\n            <div className=\"header-search\">\r\n              <input \r\n                className=\"header-search__input\"\r\n                type=\"text\" \r\n                value={searchValue}\r\n                placeholder=\"Search user...\"\r\n                onChange={handleChangeInput}\r\n                onKeyPress={keyPress}\r\n                onFocus={inputFocus}\r\n                onBlur={inputUnFocus}\r\n              />\r\n              <div id=\"searchHistory\" className=\"header-search__history\">\r\n                {\r\n                  searchHistory()\r\n                }\r\n              </div>\r\n            </div>\r\n  \r\n            <div className=\"header-viewType\" onClick={handleClickViewType}>\r\n              {viewType === \"list\" ? \r\n              <> <span className=\"text\">List</span> {listIco}</> : \r\n              <> <span className=\"text\">Grid</span> {gridIco}</>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        <div className=\"mainPage-inner container\">\r\n          <ul id=\"usersWrapId\" className={`${viewType} users-wrapper`}>\r\n            {\r\n              loading ? <div className=\"loading\">Loading...</div>:\r\n              popularUsers.map(item => <User key={item.id} user={item}/>)\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default MainPage;","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport {useHttp} from './Hooks/http.hook';\r\n\r\nimport {makeRepoList} from './Repos';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst backIco = <FontAwesomeIcon icon={faArrowLeft} />\r\n\r\nconst API_URL = 'https://api.github.com/users/';\r\n\r\nconst OrganizationsList = ({orgz}) => {\r\n    return (\r\n        <li className=\"userPage-organizations-ul__item\">\r\n            <img \r\n                className=\"userPage-organizations-ul__item-img\"\r\n                src={orgz.avatar_url}></img>\r\n            <a \r\n                className=\"userPage-organizations-ul__item-link\"\r\n                href={`https://github.com/${orgz.login}`}\r\n                target=\"_blank\"\r\n            >\r\n                 {orgz.login}\r\n            </a>\r\n        </li>\r\n    )\r\n}\r\n\r\nconst Organizations = ({user}) => {\r\n    const [orgzs, setOrgzs] = useState([]);\r\n    const {loading, error, request, clearError} = useHttp();\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const data = await request(`${user.organizations_url}`)\r\n            setOrgzs(data);\r\n        } catch(err) {\r\n            console.log(err)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        {\r\n            loading ? <>Loading Organizations...</> :\r\n                orgzs.length === 0 ? <>No organizations!</> :\r\n                    <ul className=\"userPage-organizations-ul\">\r\n                        {\r\n                            orgzs.map(orgz => <OrganizationsList key={orgz.id} orgz={orgz}/>)\r\n                        }\r\n                    </ul>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nconst UserPageInfo = ({user}) => {\r\n    const [repos, setRepos] = useState([])\r\n    const {loading, error, request, clearError} = useHttp();\r\n    \r\n    useEffect(async () => {\r\n        try {\r\n            const data = await request(`${user.repos_url}?per_page=3`)\r\n            setRepos(data);\r\n        } catch(err) {\r\n            console.log(err)\r\n        }\r\n    }, [])\r\n\r\n    const repoList = loading ? [] : makeRepoList(repos)\r\n\r\n    let history = useHistory();\r\n\r\n    const handleClick = () => {\r\n      history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div onClick={handleClick} className=\"userPage-back\">{backIco}</div>\r\n            <div className=\"userPage-imgWrap\">\r\n                <img   \r\n                    className=\"userPage-imgWrap__img\"\r\n                    src={user.avatar_url} \r\n                    alt=\"user_img\"\r\n                />\r\n            </div>\r\n            <div className=\"userPage-name\">\r\n                <a \r\n                    className=\"userPage-name__link\" \r\n                    href={user.html_url}\r\n                    target=\"_blank\"\r\n                >\r\n                    {user.login}\r\n                </a>\r\n            </div>\r\n            <div className=\"userPage-type\">\r\n                Type: {user.type}\r\n            </div>\r\n            <div className=\"userPage-repos\">\r\n                Repositories: {loading ? null : repoList.length > 0 ? \r\n                    <div className=\"repos-linksWrap\">{repoList}</div> :\r\n                    <>Empty</>\r\n                }\r\n            </div>\r\n            \r\n            <div className=\"userPage-organizations\">\r\n                Organizations:\r\n                <Organizations user={user}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst UserPage = () => {\r\n    const [user,setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true)\r\n    const {username} = useParams();\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    const loadData = async () => {\r\n        try {\r\n            const response = await fetch(`${API_URL}${username}`);\r\n            const data = await response.json();\r\n            setUser(data);\r\n            setLoading(false)\r\n        } catch(err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div className=\"userPage userPage-outer\">\r\n          <div className=\"userPage-inner container\">\r\n                {loading ? <>Loading...</> : \r\n                    !user.hasOwnProperty('login') ? \r\n                        <>User Not Found...</> : \r\n                        <UserPageInfo user={user}/>}\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default UserPage;","import React from 'react';\nimport MainPage from './MainPage';\nimport UserPage from './UserPage';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\n\n// Style\nimport './scss/App.scss';\n\nconst MainApp = () => {\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact={true} component={MainPage} />\n          <Route path=\"/:username\" children={<UserPage/>}/>\n        </Switch>\n      </Router>\n    </>\n  )\n}\n\nexport default MainApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainApp from './MainApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}